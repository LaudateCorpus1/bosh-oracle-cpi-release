// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListVirtualCircuitPublicPrefixesParams creates a new ListVirtualCircuitPublicPrefixesParams object
// with the default values initialized.
func NewListVirtualCircuitPublicPrefixesParams() *ListVirtualCircuitPublicPrefixesParams {
	var ()
	return &ListVirtualCircuitPublicPrefixesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListVirtualCircuitPublicPrefixesParamsWithTimeout creates a new ListVirtualCircuitPublicPrefixesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListVirtualCircuitPublicPrefixesParamsWithTimeout(timeout time.Duration) *ListVirtualCircuitPublicPrefixesParams {
	var ()
	return &ListVirtualCircuitPublicPrefixesParams{

		timeout: timeout,
	}
}

// NewListVirtualCircuitPublicPrefixesParamsWithContext creates a new ListVirtualCircuitPublicPrefixesParams object
// with the default values initialized, and the ability to set a context for a request
func NewListVirtualCircuitPublicPrefixesParamsWithContext(ctx context.Context) *ListVirtualCircuitPublicPrefixesParams {
	var ()
	return &ListVirtualCircuitPublicPrefixesParams{

		Context: ctx,
	}
}

// NewListVirtualCircuitPublicPrefixesParamsWithHTTPClient creates a new ListVirtualCircuitPublicPrefixesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListVirtualCircuitPublicPrefixesParamsWithHTTPClient(client *http.Client) *ListVirtualCircuitPublicPrefixesParams {
	var ()
	return &ListVirtualCircuitPublicPrefixesParams{
		HTTPClient: client,
	}
}

/*ListVirtualCircuitPublicPrefixesParams contains all the parameters to send to the API endpoint
for the list virtual circuit public prefixes operation typically these are written to a http.Request
*/
type ListVirtualCircuitPublicPrefixesParams struct {

	/*VerificationState
	  A filter to only return resources that match the given verification state.
	The state value is case-insensitive.


	*/
	VerificationState *string
	/*VirtualCircuitID
	  The OCID of the virtual circuit.

	*/
	VirtualCircuitID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) WithTimeout(timeout time.Duration) *ListVirtualCircuitPublicPrefixesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) WithContext(ctx context.Context) *ListVirtualCircuitPublicPrefixesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) WithHTTPClient(client *http.Client) *ListVirtualCircuitPublicPrefixesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithVerificationState adds the verificationState to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) WithVerificationState(verificationState *string) *ListVirtualCircuitPublicPrefixesParams {
	o.SetVerificationState(verificationState)
	return o
}

// SetVerificationState adds the verificationState to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) SetVerificationState(verificationState *string) {
	o.VerificationState = verificationState
}

// WithVirtualCircuitID adds the virtualCircuitID to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) WithVirtualCircuitID(virtualCircuitID string) *ListVirtualCircuitPublicPrefixesParams {
	o.SetVirtualCircuitID(virtualCircuitID)
	return o
}

// SetVirtualCircuitID adds the virtualCircuitId to the list virtual circuit public prefixes params
func (o *ListVirtualCircuitPublicPrefixesParams) SetVirtualCircuitID(virtualCircuitID string) {
	o.VirtualCircuitID = virtualCircuitID
}

// WriteToRequest writes these params to a swagger request
func (o *ListVirtualCircuitPublicPrefixesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.VerificationState != nil {

		// query param verificationState
		var qrVerificationState string
		if o.VerificationState != nil {
			qrVerificationState = *o.VerificationState
		}
		qVerificationState := qrVerificationState
		if qVerificationState != "" {
			if err := r.SetQueryParam("verificationState", qVerificationState); err != nil {
				return err
			}
		}

	}

	// path param virtualCircuitId
	if err := r.SetPathParam("virtualCircuitId", o.VirtualCircuitID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
