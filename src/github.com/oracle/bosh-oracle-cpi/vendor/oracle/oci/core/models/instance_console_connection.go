// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InstanceConsoleConnection The `InstanceConsoleConnection` API provides you with console access to virtual machine (VM) instances,
// enabling you to troubleshoot malfunctioning instances remotely.
//
// For more information about console access, see
// [Accessing the Console](/Content/Compute/References/serialconsole.htm).
//
// swagger:model InstanceConsoleConnection
type InstanceConsoleConnection struct {

	// The OCID of the compartment to contain the console connection.
	// Max Length: 255
	// Min Length: 1
	CompartmentID string `json:"compartmentId,omitempty"`

	// The SSH connection string for the console connection.
	ConnectionString string `json:"connectionString,omitempty"`

	// Defined tags for this resource. Each key is predefined and scoped to a namespace.
	// For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).
	//
	// Example: `{"Operations": {"CostCenter": "42"}}`
	//
	DefinedTags map[string]map[string]interface{} `json:"definedTags,omitempty"`

	// The SSH public key fingerprint for the console connection.
	Fingerprint string `json:"fingerprint,omitempty"`

	// Free-form tags for this resource. Each tag is a simple key-value pair with no
	// predefined name, type, or namespace. For more information, see
	// [Resource Tags](/Content/General/Concepts/resourcetags.htm).
	//
	// Example: `{"Department": "Finance"}`
	//
	FreeformTags map[string]string `json:"freeformTags,omitempty"`

	// The OCID of the console connection.
	ID string `json:"id,omitempty"`

	// The OCID of the instance the console connection connects to.
	InstanceID string `json:"instanceId,omitempty"`

	// The current state of the console connection.
	LifecycleState string `json:"lifecycleState,omitempty"`

	// The SSH connection string for the SSH tunnel used to
	// connect to the console connection over VNC.
	//
	VncConnectionString string `json:"vncConnectionString,omitempty"`
}

// Validate validates this instance console connection
func (m *InstanceConsoleConnection) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCompartmentID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLifecycleState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InstanceConsoleConnection) validateCompartmentID(formats strfmt.Registry) error {

	if swag.IsZero(m.CompartmentID) { // not required
		return nil
	}

	if err := validate.MinLength("compartmentId", "body", string(m.CompartmentID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("compartmentId", "body", string(m.CompartmentID), 255); err != nil {
		return err
	}

	return nil
}

var instanceConsoleConnectionTypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ACTIVE","CREATING","DELETED","DELETING","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		instanceConsoleConnectionTypeLifecycleStatePropEnum = append(instanceConsoleConnectionTypeLifecycleStatePropEnum, v)
	}
}

const (

	// InstanceConsoleConnectionLifecycleStateACTIVE captures enum value "ACTIVE"
	InstanceConsoleConnectionLifecycleStateACTIVE string = "ACTIVE"

	// InstanceConsoleConnectionLifecycleStateCREATING captures enum value "CREATING"
	InstanceConsoleConnectionLifecycleStateCREATING string = "CREATING"

	// InstanceConsoleConnectionLifecycleStateDELETED captures enum value "DELETED"
	InstanceConsoleConnectionLifecycleStateDELETED string = "DELETED"

	// InstanceConsoleConnectionLifecycleStateDELETING captures enum value "DELETING"
	InstanceConsoleConnectionLifecycleStateDELETING string = "DELETING"

	// InstanceConsoleConnectionLifecycleStateFAILED captures enum value "FAILED"
	InstanceConsoleConnectionLifecycleStateFAILED string = "FAILED"
)

// prop value enum
func (m *InstanceConsoleConnection) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, instanceConsoleConnectionTypeLifecycleStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InstanceConsoleConnection) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	// value enum
	if err := m.validateLifecycleStateEnum("lifecycleState", "body", m.LifecycleState); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InstanceConsoleConnection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InstanceConsoleConnection) UnmarshalBinary(b []byte) error {
	var res InstanceConsoleConnection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
