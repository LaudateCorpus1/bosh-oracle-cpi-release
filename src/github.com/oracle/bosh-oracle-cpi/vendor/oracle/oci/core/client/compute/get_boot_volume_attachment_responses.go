// Code generated by go-swagger; DO NOT EDIT.

package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// GetBootVolumeAttachmentReader is a Reader for the GetBootVolumeAttachment structure.
type GetBootVolumeAttachmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBootVolumeAttachmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBootVolumeAttachmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetBootVolumeAttachmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBootVolumeAttachmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetBootVolumeAttachmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBootVolumeAttachmentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBootVolumeAttachmentOK creates a GetBootVolumeAttachmentOK with default headers values
func NewGetBootVolumeAttachmentOK() *GetBootVolumeAttachmentOK {
	return &GetBootVolumeAttachmentOK{}
}

/*GetBootVolumeAttachmentOK handles this case with default header values.

The boot volume attachment was retrieved.
*/
type GetBootVolumeAttachmentOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.BootVolumeAttachment
}

func (o *GetBootVolumeAttachmentOK) Error() string {
	return fmt.Sprintf("[GET /bootVolumeAttachments/{bootVolumeAttachmentId}][%d] getBootVolumeAttachmentOK  %+v", 200, o.Payload)
}

func (o *GetBootVolumeAttachmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.BootVolumeAttachment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeAttachmentUnauthorized creates a GetBootVolumeAttachmentUnauthorized with default headers values
func NewGetBootVolumeAttachmentUnauthorized() *GetBootVolumeAttachmentUnauthorized {
	return &GetBootVolumeAttachmentUnauthorized{}
}

/*GetBootVolumeAttachmentUnauthorized handles this case with default header values.

Unauthorized
*/
type GetBootVolumeAttachmentUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetBootVolumeAttachmentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bootVolumeAttachments/{bootVolumeAttachmentId}][%d] getBootVolumeAttachmentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetBootVolumeAttachmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeAttachmentNotFound creates a GetBootVolumeAttachmentNotFound with default headers values
func NewGetBootVolumeAttachmentNotFound() *GetBootVolumeAttachmentNotFound {
	return &GetBootVolumeAttachmentNotFound{}
}

/*GetBootVolumeAttachmentNotFound handles this case with default header values.

Not Found
*/
type GetBootVolumeAttachmentNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetBootVolumeAttachmentNotFound) Error() string {
	return fmt.Sprintf("[GET /bootVolumeAttachments/{bootVolumeAttachmentId}][%d] getBootVolumeAttachmentNotFound  %+v", 404, o.Payload)
}

func (o *GetBootVolumeAttachmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeAttachmentInternalServerError creates a GetBootVolumeAttachmentInternalServerError with default headers values
func NewGetBootVolumeAttachmentInternalServerError() *GetBootVolumeAttachmentInternalServerError {
	return &GetBootVolumeAttachmentInternalServerError{}
}

/*GetBootVolumeAttachmentInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetBootVolumeAttachmentInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetBootVolumeAttachmentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /bootVolumeAttachments/{bootVolumeAttachmentId}][%d] getBootVolumeAttachmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBootVolumeAttachmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeAttachmentDefault creates a GetBootVolumeAttachmentDefault with default headers values
func NewGetBootVolumeAttachmentDefault(code int) *GetBootVolumeAttachmentDefault {
	return &GetBootVolumeAttachmentDefault{
		_statusCode: code,
	}
}

/*GetBootVolumeAttachmentDefault handles this case with default header values.

An error has occurred.
*/
type GetBootVolumeAttachmentDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the get boot volume attachment default response
func (o *GetBootVolumeAttachmentDefault) Code() int {
	return o._statusCode
}

func (o *GetBootVolumeAttachmentDefault) Error() string {
	return fmt.Sprintf("[GET /bootVolumeAttachments/{bootVolumeAttachmentId}][%d] GetBootVolumeAttachment default  %+v", o._statusCode, o.Payload)
}

func (o *GetBootVolumeAttachmentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
