// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// DeleteVolumeBackupPolicyAssignmentReader is a Reader for the DeleteVolumeBackupPolicyAssignment structure.
type DeleteVolumeBackupPolicyAssignmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVolumeBackupPolicyAssignmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteVolumeBackupPolicyAssignmentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteVolumeBackupPolicyAssignmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteVolumeBackupPolicyAssignmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteVolumeBackupPolicyAssignmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteVolumeBackupPolicyAssignmentPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteVolumeBackupPolicyAssignmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteVolumeBackupPolicyAssignmentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteVolumeBackupPolicyAssignmentNoContent creates a DeleteVolumeBackupPolicyAssignmentNoContent with default headers values
func NewDeleteVolumeBackupPolicyAssignmentNoContent() *DeleteVolumeBackupPolicyAssignmentNoContent {
	return &DeleteVolumeBackupPolicyAssignmentNoContent{}
}

/*DeleteVolumeBackupPolicyAssignmentNoContent handles this case with default header values.

The volume backup policy assignment has been deleted.
*/
type DeleteVolumeBackupPolicyAssignmentNoContent struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string
}

func (o *DeleteVolumeBackupPolicyAssignmentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] deleteVolumeBackupPolicyAssignmentNoContent ", 204)
}

func (o *DeleteVolumeBackupPolicyAssignmentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	return nil
}

// NewDeleteVolumeBackupPolicyAssignmentBadRequest creates a DeleteVolumeBackupPolicyAssignmentBadRequest with default headers values
func NewDeleteVolumeBackupPolicyAssignmentBadRequest() *DeleteVolumeBackupPolicyAssignmentBadRequest {
	return &DeleteVolumeBackupPolicyAssignmentBadRequest{}
}

/*DeleteVolumeBackupPolicyAssignmentBadRequest handles this case with default header values.

Bad Request
*/
type DeleteVolumeBackupPolicyAssignmentBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteVolumeBackupPolicyAssignmentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] deleteVolumeBackupPolicyAssignmentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteVolumeBackupPolicyAssignmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumeBackupPolicyAssignmentUnauthorized creates a DeleteVolumeBackupPolicyAssignmentUnauthorized with default headers values
func NewDeleteVolumeBackupPolicyAssignmentUnauthorized() *DeleteVolumeBackupPolicyAssignmentUnauthorized {
	return &DeleteVolumeBackupPolicyAssignmentUnauthorized{}
}

/*DeleteVolumeBackupPolicyAssignmentUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteVolumeBackupPolicyAssignmentUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteVolumeBackupPolicyAssignmentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] deleteVolumeBackupPolicyAssignmentUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteVolumeBackupPolicyAssignmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumeBackupPolicyAssignmentNotFound creates a DeleteVolumeBackupPolicyAssignmentNotFound with default headers values
func NewDeleteVolumeBackupPolicyAssignmentNotFound() *DeleteVolumeBackupPolicyAssignmentNotFound {
	return &DeleteVolumeBackupPolicyAssignmentNotFound{}
}

/*DeleteVolumeBackupPolicyAssignmentNotFound handles this case with default header values.

Not Found
*/
type DeleteVolumeBackupPolicyAssignmentNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteVolumeBackupPolicyAssignmentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] deleteVolumeBackupPolicyAssignmentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVolumeBackupPolicyAssignmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumeBackupPolicyAssignmentPreconditionFailed creates a DeleteVolumeBackupPolicyAssignmentPreconditionFailed with default headers values
func NewDeleteVolumeBackupPolicyAssignmentPreconditionFailed() *DeleteVolumeBackupPolicyAssignmentPreconditionFailed {
	return &DeleteVolumeBackupPolicyAssignmentPreconditionFailed{}
}

/*DeleteVolumeBackupPolicyAssignmentPreconditionFailed handles this case with default header values.

Precondition Failed
*/
type DeleteVolumeBackupPolicyAssignmentPreconditionFailed struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteVolumeBackupPolicyAssignmentPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] deleteVolumeBackupPolicyAssignmentPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteVolumeBackupPolicyAssignmentPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumeBackupPolicyAssignmentInternalServerError creates a DeleteVolumeBackupPolicyAssignmentInternalServerError with default headers values
func NewDeleteVolumeBackupPolicyAssignmentInternalServerError() *DeleteVolumeBackupPolicyAssignmentInternalServerError {
	return &DeleteVolumeBackupPolicyAssignmentInternalServerError{}
}

/*DeleteVolumeBackupPolicyAssignmentInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteVolumeBackupPolicyAssignmentInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteVolumeBackupPolicyAssignmentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] deleteVolumeBackupPolicyAssignmentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteVolumeBackupPolicyAssignmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVolumeBackupPolicyAssignmentDefault creates a DeleteVolumeBackupPolicyAssignmentDefault with default headers values
func NewDeleteVolumeBackupPolicyAssignmentDefault(code int) *DeleteVolumeBackupPolicyAssignmentDefault {
	return &DeleteVolumeBackupPolicyAssignmentDefault{
		_statusCode: code,
	}
}

/*DeleteVolumeBackupPolicyAssignmentDefault handles this case with default header values.

An error has occurred.
*/
type DeleteVolumeBackupPolicyAssignmentDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the delete volume backup policy assignment default response
func (o *DeleteVolumeBackupPolicyAssignmentDefault) Code() int {
	return o._statusCode
}

func (o *DeleteVolumeBackupPolicyAssignmentDefault) Error() string {
	return fmt.Sprintf("[DELETE /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] DeleteVolumeBackupPolicyAssignment default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteVolumeBackupPolicyAssignmentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
