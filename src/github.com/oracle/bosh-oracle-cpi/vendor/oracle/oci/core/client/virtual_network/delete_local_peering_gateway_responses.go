// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// DeleteLocalPeeringGatewayReader is a Reader for the DeleteLocalPeeringGateway structure.
type DeleteLocalPeeringGatewayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLocalPeeringGatewayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteLocalPeeringGatewayNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteLocalPeeringGatewayBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteLocalPeeringGatewayUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteLocalPeeringGatewayNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteLocalPeeringGatewayPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteLocalPeeringGatewayInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteLocalPeeringGatewayDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteLocalPeeringGatewayNoContent creates a DeleteLocalPeeringGatewayNoContent with default headers values
func NewDeleteLocalPeeringGatewayNoContent() *DeleteLocalPeeringGatewayNoContent {
	return &DeleteLocalPeeringGatewayNoContent{}
}

/*DeleteLocalPeeringGatewayNoContent handles this case with default header values.

The local peering gateway is being deleted.
*/
type DeleteLocalPeeringGatewayNoContent struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string
}

func (o *DeleteLocalPeeringGatewayNoContent) Error() string {
	return fmt.Sprintf("[DELETE /localPeeringGateways/{localPeeringGatewayId}][%d] deleteLocalPeeringGatewayNoContent ", 204)
}

func (o *DeleteLocalPeeringGatewayNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	return nil
}

// NewDeleteLocalPeeringGatewayBadRequest creates a DeleteLocalPeeringGatewayBadRequest with default headers values
func NewDeleteLocalPeeringGatewayBadRequest() *DeleteLocalPeeringGatewayBadRequest {
	return &DeleteLocalPeeringGatewayBadRequest{}
}

/*DeleteLocalPeeringGatewayBadRequest handles this case with default header values.

Bad Request
*/
type DeleteLocalPeeringGatewayBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteLocalPeeringGatewayBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /localPeeringGateways/{localPeeringGatewayId}][%d] deleteLocalPeeringGatewayBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLocalPeeringGatewayBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalPeeringGatewayUnauthorized creates a DeleteLocalPeeringGatewayUnauthorized with default headers values
func NewDeleteLocalPeeringGatewayUnauthorized() *DeleteLocalPeeringGatewayUnauthorized {
	return &DeleteLocalPeeringGatewayUnauthorized{}
}

/*DeleteLocalPeeringGatewayUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteLocalPeeringGatewayUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteLocalPeeringGatewayUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /localPeeringGateways/{localPeeringGatewayId}][%d] deleteLocalPeeringGatewayUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteLocalPeeringGatewayUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalPeeringGatewayNotFound creates a DeleteLocalPeeringGatewayNotFound with default headers values
func NewDeleteLocalPeeringGatewayNotFound() *DeleteLocalPeeringGatewayNotFound {
	return &DeleteLocalPeeringGatewayNotFound{}
}

/*DeleteLocalPeeringGatewayNotFound handles this case with default header values.

Not Found
*/
type DeleteLocalPeeringGatewayNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteLocalPeeringGatewayNotFound) Error() string {
	return fmt.Sprintf("[DELETE /localPeeringGateways/{localPeeringGatewayId}][%d] deleteLocalPeeringGatewayNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLocalPeeringGatewayNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalPeeringGatewayPreconditionFailed creates a DeleteLocalPeeringGatewayPreconditionFailed with default headers values
func NewDeleteLocalPeeringGatewayPreconditionFailed() *DeleteLocalPeeringGatewayPreconditionFailed {
	return &DeleteLocalPeeringGatewayPreconditionFailed{}
}

/*DeleteLocalPeeringGatewayPreconditionFailed handles this case with default header values.

Precondition Failed
*/
type DeleteLocalPeeringGatewayPreconditionFailed struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteLocalPeeringGatewayPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /localPeeringGateways/{localPeeringGatewayId}][%d] deleteLocalPeeringGatewayPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteLocalPeeringGatewayPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalPeeringGatewayInternalServerError creates a DeleteLocalPeeringGatewayInternalServerError with default headers values
func NewDeleteLocalPeeringGatewayInternalServerError() *DeleteLocalPeeringGatewayInternalServerError {
	return &DeleteLocalPeeringGatewayInternalServerError{}
}

/*DeleteLocalPeeringGatewayInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteLocalPeeringGatewayInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteLocalPeeringGatewayInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /localPeeringGateways/{localPeeringGatewayId}][%d] deleteLocalPeeringGatewayInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteLocalPeeringGatewayInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLocalPeeringGatewayDefault creates a DeleteLocalPeeringGatewayDefault with default headers values
func NewDeleteLocalPeeringGatewayDefault(code int) *DeleteLocalPeeringGatewayDefault {
	return &DeleteLocalPeeringGatewayDefault{
		_statusCode: code,
	}
}

/*DeleteLocalPeeringGatewayDefault handles this case with default header values.

An error has occurred.
*/
type DeleteLocalPeeringGatewayDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the delete local peering gateway default response
func (o *DeleteLocalPeeringGatewayDefault) Code() int {
	return o._statusCode
}

func (o *DeleteLocalPeeringGatewayDefault) Error() string {
	return fmt.Sprintf("[DELETE /localPeeringGateways/{localPeeringGatewayId}][%d] DeleteLocalPeeringGateway default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteLocalPeeringGatewayDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
