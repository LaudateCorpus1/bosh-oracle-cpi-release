// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// GetVolumeBackupPolicyReader is a Reader for the GetVolumeBackupPolicy structure.
type GetVolumeBackupPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVolumeBackupPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVolumeBackupPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetVolumeBackupPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetVolumeBackupPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetVolumeBackupPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetVolumeBackupPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetVolumeBackupPolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVolumeBackupPolicyOK creates a GetVolumeBackupPolicyOK with default headers values
func NewGetVolumeBackupPolicyOK() *GetVolumeBackupPolicyOK {
	return &GetVolumeBackupPolicyOK{}
}

/*GetVolumeBackupPolicyOK handles this case with default header values.

The volume backup policy was retrieved.
*/
type GetVolumeBackupPolicyOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.VolumeBackupPolicy
}

func (o *GetVolumeBackupPolicyOK) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies/{policyId}][%d] getVolumeBackupPolicyOK  %+v", 200, o.Payload)
}

func (o *GetVolumeBackupPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.VolumeBackupPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyBadRequest creates a GetVolumeBackupPolicyBadRequest with default headers values
func NewGetVolumeBackupPolicyBadRequest() *GetVolumeBackupPolicyBadRequest {
	return &GetVolumeBackupPolicyBadRequest{}
}

/*GetVolumeBackupPolicyBadRequest handles this case with default header values.

Bad Request
*/
type GetVolumeBackupPolicyBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyBadRequest) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies/{policyId}][%d] getVolumeBackupPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *GetVolumeBackupPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyUnauthorized creates a GetVolumeBackupPolicyUnauthorized with default headers values
func NewGetVolumeBackupPolicyUnauthorized() *GetVolumeBackupPolicyUnauthorized {
	return &GetVolumeBackupPolicyUnauthorized{}
}

/*GetVolumeBackupPolicyUnauthorized handles this case with default header values.

Unauthorized
*/
type GetVolumeBackupPolicyUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies/{policyId}][%d] getVolumeBackupPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVolumeBackupPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyNotFound creates a GetVolumeBackupPolicyNotFound with default headers values
func NewGetVolumeBackupPolicyNotFound() *GetVolumeBackupPolicyNotFound {
	return &GetVolumeBackupPolicyNotFound{}
}

/*GetVolumeBackupPolicyNotFound handles this case with default header values.

Not Found
*/
type GetVolumeBackupPolicyNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyNotFound) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies/{policyId}][%d] getVolumeBackupPolicyNotFound  %+v", 404, o.Payload)
}

func (o *GetVolumeBackupPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyInternalServerError creates a GetVolumeBackupPolicyInternalServerError with default headers values
func NewGetVolumeBackupPolicyInternalServerError() *GetVolumeBackupPolicyInternalServerError {
	return &GetVolumeBackupPolicyInternalServerError{}
}

/*GetVolumeBackupPolicyInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetVolumeBackupPolicyInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies/{policyId}][%d] getVolumeBackupPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVolumeBackupPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyDefault creates a GetVolumeBackupPolicyDefault with default headers values
func NewGetVolumeBackupPolicyDefault(code int) *GetVolumeBackupPolicyDefault {
	return &GetVolumeBackupPolicyDefault{
		_statusCode: code,
	}
}

/*GetVolumeBackupPolicyDefault handles this case with default header values.

An error has occurred.
*/
type GetVolumeBackupPolicyDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the get volume backup policy default response
func (o *GetVolumeBackupPolicyDefault) Code() int {
	return o._statusCode
}

func (o *GetVolumeBackupPolicyDefault) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies/{policyId}][%d] GetVolumeBackupPolicy default  %+v", o._statusCode, o.Payload)
}

func (o *GetVolumeBackupPolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
