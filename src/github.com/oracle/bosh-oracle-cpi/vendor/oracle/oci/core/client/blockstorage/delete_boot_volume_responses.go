// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// DeleteBootVolumeReader is a Reader for the DeleteBootVolume structure.
type DeleteBootVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBootVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteBootVolumeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteBootVolumeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteBootVolumeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteBootVolumeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteBootVolumeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteBootVolumePreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteBootVolumeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteBootVolumeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteBootVolumeNoContent creates a DeleteBootVolumeNoContent with default headers values
func NewDeleteBootVolumeNoContent() *DeleteBootVolumeNoContent {
	return &DeleteBootVolumeNoContent{}
}

/*DeleteBootVolumeNoContent handles this case with default header values.

The boot volume is being deleted.
*/
type DeleteBootVolumeNoContent struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string
}

func (o *DeleteBootVolumeNoContent) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] deleteBootVolumeNoContent ", 204)
}

func (o *DeleteBootVolumeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	return nil
}

// NewDeleteBootVolumeBadRequest creates a DeleteBootVolumeBadRequest with default headers values
func NewDeleteBootVolumeBadRequest() *DeleteBootVolumeBadRequest {
	return &DeleteBootVolumeBadRequest{}
}

/*DeleteBootVolumeBadRequest handles this case with default header values.

Bad Request
*/
type DeleteBootVolumeBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteBootVolumeBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] deleteBootVolumeBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteBootVolumeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootVolumeUnauthorized creates a DeleteBootVolumeUnauthorized with default headers values
func NewDeleteBootVolumeUnauthorized() *DeleteBootVolumeUnauthorized {
	return &DeleteBootVolumeUnauthorized{}
}

/*DeleteBootVolumeUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteBootVolumeUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteBootVolumeUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] deleteBootVolumeUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteBootVolumeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootVolumeNotFound creates a DeleteBootVolumeNotFound with default headers values
func NewDeleteBootVolumeNotFound() *DeleteBootVolumeNotFound {
	return &DeleteBootVolumeNotFound{}
}

/*DeleteBootVolumeNotFound handles this case with default header values.

Not Found
*/
type DeleteBootVolumeNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteBootVolumeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] deleteBootVolumeNotFound  %+v", 404, o.Payload)
}

func (o *DeleteBootVolumeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootVolumeConflict creates a DeleteBootVolumeConflict with default headers values
func NewDeleteBootVolumeConflict() *DeleteBootVolumeConflict {
	return &DeleteBootVolumeConflict{}
}

/*DeleteBootVolumeConflict handles this case with default header values.

Conflict
*/
type DeleteBootVolumeConflict struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteBootVolumeConflict) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] deleteBootVolumeConflict  %+v", 409, o.Payload)
}

func (o *DeleteBootVolumeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootVolumePreconditionFailed creates a DeleteBootVolumePreconditionFailed with default headers values
func NewDeleteBootVolumePreconditionFailed() *DeleteBootVolumePreconditionFailed {
	return &DeleteBootVolumePreconditionFailed{}
}

/*DeleteBootVolumePreconditionFailed handles this case with default header values.

Precondition Failed
*/
type DeleteBootVolumePreconditionFailed struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteBootVolumePreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] deleteBootVolumePreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteBootVolumePreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootVolumeInternalServerError creates a DeleteBootVolumeInternalServerError with default headers values
func NewDeleteBootVolumeInternalServerError() *DeleteBootVolumeInternalServerError {
	return &DeleteBootVolumeInternalServerError{}
}

/*DeleteBootVolumeInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteBootVolumeInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteBootVolumeInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] deleteBootVolumeInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteBootVolumeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootVolumeDefault creates a DeleteBootVolumeDefault with default headers values
func NewDeleteBootVolumeDefault(code int) *DeleteBootVolumeDefault {
	return &DeleteBootVolumeDefault{
		_statusCode: code,
	}
}

/*DeleteBootVolumeDefault handles this case with default header values.

An error has occurred.
*/
type DeleteBootVolumeDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the delete boot volume default response
func (o *DeleteBootVolumeDefault) Code() int {
	return o._statusCode
}

func (o *DeleteBootVolumeDefault) Error() string {
	return fmt.Sprintf("[DELETE /bootVolumes/{bootVolumeId}][%d] DeleteBootVolume default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteBootVolumeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
