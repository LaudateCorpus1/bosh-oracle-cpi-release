// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListBootVolumesParams creates a new ListBootVolumesParams object
// with the default values initialized.
func NewListBootVolumesParams() *ListBootVolumesParams {
	var ()
	return &ListBootVolumesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListBootVolumesParamsWithTimeout creates a new ListBootVolumesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListBootVolumesParamsWithTimeout(timeout time.Duration) *ListBootVolumesParams {
	var ()
	return &ListBootVolumesParams{

		timeout: timeout,
	}
}

// NewListBootVolumesParamsWithContext creates a new ListBootVolumesParams object
// with the default values initialized, and the ability to set a context for a request
func NewListBootVolumesParamsWithContext(ctx context.Context) *ListBootVolumesParams {
	var ()
	return &ListBootVolumesParams{

		Context: ctx,
	}
}

// NewListBootVolumesParamsWithHTTPClient creates a new ListBootVolumesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListBootVolumesParamsWithHTTPClient(client *http.Client) *ListBootVolumesParams {
	var ()
	return &ListBootVolumesParams{
		HTTPClient: client,
	}
}

/*ListBootVolumesParams contains all the parameters to send to the API endpoint
for the list boot volumes operation typically these are written to a http.Request
*/
type ListBootVolumesParams struct {

	/*AvailabilityDomain
	  The name of the Availability Domain.

	Example: `Uocm:PHX-AD-1`


	*/
	AvailabilityDomain string
	/*CompartmentID
	  The OCID of the compartment.

	*/
	CompartmentID string
	/*Limit
	  The maximum number of items to return in a paginated "List" call.

	Example: `500`


	*/
	Limit *int64
	/*Page
	  The value of the `opc-next-page` response header from the previous "List" call.


	*/
	Page *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list boot volumes params
func (o *ListBootVolumesParams) WithTimeout(timeout time.Duration) *ListBootVolumesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list boot volumes params
func (o *ListBootVolumesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list boot volumes params
func (o *ListBootVolumesParams) WithContext(ctx context.Context) *ListBootVolumesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list boot volumes params
func (o *ListBootVolumesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list boot volumes params
func (o *ListBootVolumesParams) WithHTTPClient(client *http.Client) *ListBootVolumesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list boot volumes params
func (o *ListBootVolumesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAvailabilityDomain adds the availabilityDomain to the list boot volumes params
func (o *ListBootVolumesParams) WithAvailabilityDomain(availabilityDomain string) *ListBootVolumesParams {
	o.SetAvailabilityDomain(availabilityDomain)
	return o
}

// SetAvailabilityDomain adds the availabilityDomain to the list boot volumes params
func (o *ListBootVolumesParams) SetAvailabilityDomain(availabilityDomain string) {
	o.AvailabilityDomain = availabilityDomain
}

// WithCompartmentID adds the compartmentID to the list boot volumes params
func (o *ListBootVolumesParams) WithCompartmentID(compartmentID string) *ListBootVolumesParams {
	o.SetCompartmentID(compartmentID)
	return o
}

// SetCompartmentID adds the compartmentId to the list boot volumes params
func (o *ListBootVolumesParams) SetCompartmentID(compartmentID string) {
	o.CompartmentID = compartmentID
}

// WithLimit adds the limit to the list boot volumes params
func (o *ListBootVolumesParams) WithLimit(limit *int64) *ListBootVolumesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list boot volumes params
func (o *ListBootVolumesParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithPage adds the page to the list boot volumes params
func (o *ListBootVolumesParams) WithPage(page *string) *ListBootVolumesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the list boot volumes params
func (o *ListBootVolumesParams) SetPage(page *string) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *ListBootVolumesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param availabilityDomain
	qrAvailabilityDomain := o.AvailabilityDomain
	qAvailabilityDomain := qrAvailabilityDomain
	if qAvailabilityDomain != "" {
		if err := r.SetQueryParam("availabilityDomain", qAvailabilityDomain); err != nil {
			return err
		}
	}

	// query param compartmentId
	qrCompartmentID := o.CompartmentID
	qCompartmentID := qrCompartmentID
	if qCompartmentID != "" {
		if err := r.SetQueryParam("compartmentId", qCompartmentID); err != nil {
			return err
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage string
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
