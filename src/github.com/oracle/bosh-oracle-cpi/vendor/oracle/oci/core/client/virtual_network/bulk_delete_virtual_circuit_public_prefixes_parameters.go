// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// NewBulkDeleteVirtualCircuitPublicPrefixesParams creates a new BulkDeleteVirtualCircuitPublicPrefixesParams object
// with the default values initialized.
func NewBulkDeleteVirtualCircuitPublicPrefixesParams() *BulkDeleteVirtualCircuitPublicPrefixesParams {
	var ()
	return &BulkDeleteVirtualCircuitPublicPrefixesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewBulkDeleteVirtualCircuitPublicPrefixesParamsWithTimeout creates a new BulkDeleteVirtualCircuitPublicPrefixesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBulkDeleteVirtualCircuitPublicPrefixesParamsWithTimeout(timeout time.Duration) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	var ()
	return &BulkDeleteVirtualCircuitPublicPrefixesParams{

		timeout: timeout,
	}
}

// NewBulkDeleteVirtualCircuitPublicPrefixesParamsWithContext creates a new BulkDeleteVirtualCircuitPublicPrefixesParams object
// with the default values initialized, and the ability to set a context for a request
func NewBulkDeleteVirtualCircuitPublicPrefixesParamsWithContext(ctx context.Context) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	var ()
	return &BulkDeleteVirtualCircuitPublicPrefixesParams{

		Context: ctx,
	}
}

// NewBulkDeleteVirtualCircuitPublicPrefixesParamsWithHTTPClient creates a new BulkDeleteVirtualCircuitPublicPrefixesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBulkDeleteVirtualCircuitPublicPrefixesParamsWithHTTPClient(client *http.Client) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	var ()
	return &BulkDeleteVirtualCircuitPublicPrefixesParams{
		HTTPClient: client,
	}
}

/*BulkDeleteVirtualCircuitPublicPrefixesParams contains all the parameters to send to the API endpoint
for the bulk delete virtual circuit public prefixes operation typically these are written to a http.Request
*/
type BulkDeleteVirtualCircuitPublicPrefixesParams struct {

	/*BulkDeleteVirtualCircuitPublicPrefixesDetails
	  Request with publix prefixes to be deleted from the virtual circuit

	*/
	BulkDeleteVirtualCircuitPublicPrefixesDetails *models.BulkDeleteVirtualCircuitPublicPrefixesDetails
	/*VirtualCircuitID
	  The OCID of the virtual circuit.

	*/
	VirtualCircuitID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) WithTimeout(timeout time.Duration) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) WithContext(ctx context.Context) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) WithHTTPClient(client *http.Client) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBulkDeleteVirtualCircuitPublicPrefixesDetails adds the bulkDeleteVirtualCircuitPublicPrefixesDetails to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) WithBulkDeleteVirtualCircuitPublicPrefixesDetails(bulkDeleteVirtualCircuitPublicPrefixesDetails *models.BulkDeleteVirtualCircuitPublicPrefixesDetails) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	o.SetBulkDeleteVirtualCircuitPublicPrefixesDetails(bulkDeleteVirtualCircuitPublicPrefixesDetails)
	return o
}

// SetBulkDeleteVirtualCircuitPublicPrefixesDetails adds the bulkDeleteVirtualCircuitPublicPrefixesDetails to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) SetBulkDeleteVirtualCircuitPublicPrefixesDetails(bulkDeleteVirtualCircuitPublicPrefixesDetails *models.BulkDeleteVirtualCircuitPublicPrefixesDetails) {
	o.BulkDeleteVirtualCircuitPublicPrefixesDetails = bulkDeleteVirtualCircuitPublicPrefixesDetails
}

// WithVirtualCircuitID adds the virtualCircuitID to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) WithVirtualCircuitID(virtualCircuitID string) *BulkDeleteVirtualCircuitPublicPrefixesParams {
	o.SetVirtualCircuitID(virtualCircuitID)
	return o
}

// SetVirtualCircuitID adds the virtualCircuitId to the bulk delete virtual circuit public prefixes params
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) SetVirtualCircuitID(virtualCircuitID string) {
	o.VirtualCircuitID = virtualCircuitID
}

// WriteToRequest writes these params to a swagger request
func (o *BulkDeleteVirtualCircuitPublicPrefixesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BulkDeleteVirtualCircuitPublicPrefixesDetails != nil {
		if err := r.SetBodyParam(o.BulkDeleteVirtualCircuitPublicPrefixesDetails); err != nil {
			return err
		}
	}

	// path param virtualCircuitId
	if err := r.SetPathParam("virtualCircuitId", o.VirtualCircuitID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
