// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// CreateLocalPeeringGatewayReader is a Reader for the CreateLocalPeeringGateway structure.
type CreateLocalPeeringGatewayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateLocalPeeringGatewayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateLocalPeeringGatewayOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateLocalPeeringGatewayBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateLocalPeeringGatewayUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateLocalPeeringGatewayNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateLocalPeeringGatewayConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateLocalPeeringGatewayInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCreateLocalPeeringGatewayDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateLocalPeeringGatewayOK creates a CreateLocalPeeringGatewayOK with default headers values
func NewCreateLocalPeeringGatewayOK() *CreateLocalPeeringGatewayOK {
	return &CreateLocalPeeringGatewayOK{}
}

/*CreateLocalPeeringGatewayOK handles this case with default header values.

The local peering gateway was created.
*/
type CreateLocalPeeringGatewayOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.LocalPeeringGateway
}

func (o *CreateLocalPeeringGatewayOK) Error() string {
	return fmt.Sprintf("[POST /localPeeringGateways][%d] createLocalPeeringGatewayOK  %+v", 200, o.Payload)
}

func (o *CreateLocalPeeringGatewayOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.LocalPeeringGateway)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLocalPeeringGatewayBadRequest creates a CreateLocalPeeringGatewayBadRequest with default headers values
func NewCreateLocalPeeringGatewayBadRequest() *CreateLocalPeeringGatewayBadRequest {
	return &CreateLocalPeeringGatewayBadRequest{}
}

/*CreateLocalPeeringGatewayBadRequest handles this case with default header values.

Bad Request
*/
type CreateLocalPeeringGatewayBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateLocalPeeringGatewayBadRequest) Error() string {
	return fmt.Sprintf("[POST /localPeeringGateways][%d] createLocalPeeringGatewayBadRequest  %+v", 400, o.Payload)
}

func (o *CreateLocalPeeringGatewayBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLocalPeeringGatewayUnauthorized creates a CreateLocalPeeringGatewayUnauthorized with default headers values
func NewCreateLocalPeeringGatewayUnauthorized() *CreateLocalPeeringGatewayUnauthorized {
	return &CreateLocalPeeringGatewayUnauthorized{}
}

/*CreateLocalPeeringGatewayUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateLocalPeeringGatewayUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateLocalPeeringGatewayUnauthorized) Error() string {
	return fmt.Sprintf("[POST /localPeeringGateways][%d] createLocalPeeringGatewayUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateLocalPeeringGatewayUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLocalPeeringGatewayNotFound creates a CreateLocalPeeringGatewayNotFound with default headers values
func NewCreateLocalPeeringGatewayNotFound() *CreateLocalPeeringGatewayNotFound {
	return &CreateLocalPeeringGatewayNotFound{}
}

/*CreateLocalPeeringGatewayNotFound handles this case with default header values.

Not Found
*/
type CreateLocalPeeringGatewayNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateLocalPeeringGatewayNotFound) Error() string {
	return fmt.Sprintf("[POST /localPeeringGateways][%d] createLocalPeeringGatewayNotFound  %+v", 404, o.Payload)
}

func (o *CreateLocalPeeringGatewayNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLocalPeeringGatewayConflict creates a CreateLocalPeeringGatewayConflict with default headers values
func NewCreateLocalPeeringGatewayConflict() *CreateLocalPeeringGatewayConflict {
	return &CreateLocalPeeringGatewayConflict{}
}

/*CreateLocalPeeringGatewayConflict handles this case with default header values.

Conflict
*/
type CreateLocalPeeringGatewayConflict struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateLocalPeeringGatewayConflict) Error() string {
	return fmt.Sprintf("[POST /localPeeringGateways][%d] createLocalPeeringGatewayConflict  %+v", 409, o.Payload)
}

func (o *CreateLocalPeeringGatewayConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLocalPeeringGatewayInternalServerError creates a CreateLocalPeeringGatewayInternalServerError with default headers values
func NewCreateLocalPeeringGatewayInternalServerError() *CreateLocalPeeringGatewayInternalServerError {
	return &CreateLocalPeeringGatewayInternalServerError{}
}

/*CreateLocalPeeringGatewayInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateLocalPeeringGatewayInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateLocalPeeringGatewayInternalServerError) Error() string {
	return fmt.Sprintf("[POST /localPeeringGateways][%d] createLocalPeeringGatewayInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateLocalPeeringGatewayInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateLocalPeeringGatewayDefault creates a CreateLocalPeeringGatewayDefault with default headers values
func NewCreateLocalPeeringGatewayDefault(code int) *CreateLocalPeeringGatewayDefault {
	return &CreateLocalPeeringGatewayDefault{
		_statusCode: code,
	}
}

/*CreateLocalPeeringGatewayDefault handles this case with default header values.

An error has occurred.
*/
type CreateLocalPeeringGatewayDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the create local peering gateway default response
func (o *CreateLocalPeeringGatewayDefault) Code() int {
	return o._statusCode
}

func (o *CreateLocalPeeringGatewayDefault) Error() string {
	return fmt.Sprintf("[POST /localPeeringGateways][%d] CreateLocalPeeringGateway default  %+v", o._statusCode, o.Payload)
}

func (o *CreateLocalPeeringGatewayDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
