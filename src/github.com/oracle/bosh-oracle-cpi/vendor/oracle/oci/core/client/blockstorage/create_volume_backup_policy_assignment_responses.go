// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// CreateVolumeBackupPolicyAssignmentReader is a Reader for the CreateVolumeBackupPolicyAssignment structure.
type CreateVolumeBackupPolicyAssignmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateVolumeBackupPolicyAssignmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateVolumeBackupPolicyAssignmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateVolumeBackupPolicyAssignmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateVolumeBackupPolicyAssignmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateVolumeBackupPolicyAssignmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateVolumeBackupPolicyAssignmentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateVolumeBackupPolicyAssignmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCreateVolumeBackupPolicyAssignmentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateVolumeBackupPolicyAssignmentOK creates a CreateVolumeBackupPolicyAssignmentOK with default headers values
func NewCreateVolumeBackupPolicyAssignmentOK() *CreateVolumeBackupPolicyAssignmentOK {
	return &CreateVolumeBackupPolicyAssignmentOK{}
}

/*CreateVolumeBackupPolicyAssignmentOK handles this case with default header values.

The volume backup policy has been assigned.
*/
type CreateVolumeBackupPolicyAssignmentOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.VolumeBackupPolicyAssignment
}

func (o *CreateVolumeBackupPolicyAssignmentOK) Error() string {
	return fmt.Sprintf("[POST /volumeBackupPolicyAssignments][%d] createVolumeBackupPolicyAssignmentOK  %+v", 200, o.Payload)
}

func (o *CreateVolumeBackupPolicyAssignmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.VolumeBackupPolicyAssignment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeBackupPolicyAssignmentBadRequest creates a CreateVolumeBackupPolicyAssignmentBadRequest with default headers values
func NewCreateVolumeBackupPolicyAssignmentBadRequest() *CreateVolumeBackupPolicyAssignmentBadRequest {
	return &CreateVolumeBackupPolicyAssignmentBadRequest{}
}

/*CreateVolumeBackupPolicyAssignmentBadRequest handles this case with default header values.

Bad Request
*/
type CreateVolumeBackupPolicyAssignmentBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateVolumeBackupPolicyAssignmentBadRequest) Error() string {
	return fmt.Sprintf("[POST /volumeBackupPolicyAssignments][%d] createVolumeBackupPolicyAssignmentBadRequest  %+v", 400, o.Payload)
}

func (o *CreateVolumeBackupPolicyAssignmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeBackupPolicyAssignmentUnauthorized creates a CreateVolumeBackupPolicyAssignmentUnauthorized with default headers values
func NewCreateVolumeBackupPolicyAssignmentUnauthorized() *CreateVolumeBackupPolicyAssignmentUnauthorized {
	return &CreateVolumeBackupPolicyAssignmentUnauthorized{}
}

/*CreateVolumeBackupPolicyAssignmentUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateVolumeBackupPolicyAssignmentUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateVolumeBackupPolicyAssignmentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /volumeBackupPolicyAssignments][%d] createVolumeBackupPolicyAssignmentUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateVolumeBackupPolicyAssignmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeBackupPolicyAssignmentNotFound creates a CreateVolumeBackupPolicyAssignmentNotFound with default headers values
func NewCreateVolumeBackupPolicyAssignmentNotFound() *CreateVolumeBackupPolicyAssignmentNotFound {
	return &CreateVolumeBackupPolicyAssignmentNotFound{}
}

/*CreateVolumeBackupPolicyAssignmentNotFound handles this case with default header values.

Not Found
*/
type CreateVolumeBackupPolicyAssignmentNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateVolumeBackupPolicyAssignmentNotFound) Error() string {
	return fmt.Sprintf("[POST /volumeBackupPolicyAssignments][%d] createVolumeBackupPolicyAssignmentNotFound  %+v", 404, o.Payload)
}

func (o *CreateVolumeBackupPolicyAssignmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeBackupPolicyAssignmentConflict creates a CreateVolumeBackupPolicyAssignmentConflict with default headers values
func NewCreateVolumeBackupPolicyAssignmentConflict() *CreateVolumeBackupPolicyAssignmentConflict {
	return &CreateVolumeBackupPolicyAssignmentConflict{}
}

/*CreateVolumeBackupPolicyAssignmentConflict handles this case with default header values.

Conflict
*/
type CreateVolumeBackupPolicyAssignmentConflict struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateVolumeBackupPolicyAssignmentConflict) Error() string {
	return fmt.Sprintf("[POST /volumeBackupPolicyAssignments][%d] createVolumeBackupPolicyAssignmentConflict  %+v", 409, o.Payload)
}

func (o *CreateVolumeBackupPolicyAssignmentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeBackupPolicyAssignmentInternalServerError creates a CreateVolumeBackupPolicyAssignmentInternalServerError with default headers values
func NewCreateVolumeBackupPolicyAssignmentInternalServerError() *CreateVolumeBackupPolicyAssignmentInternalServerError {
	return &CreateVolumeBackupPolicyAssignmentInternalServerError{}
}

/*CreateVolumeBackupPolicyAssignmentInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateVolumeBackupPolicyAssignmentInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *CreateVolumeBackupPolicyAssignmentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /volumeBackupPolicyAssignments][%d] createVolumeBackupPolicyAssignmentInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateVolumeBackupPolicyAssignmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateVolumeBackupPolicyAssignmentDefault creates a CreateVolumeBackupPolicyAssignmentDefault with default headers values
func NewCreateVolumeBackupPolicyAssignmentDefault(code int) *CreateVolumeBackupPolicyAssignmentDefault {
	return &CreateVolumeBackupPolicyAssignmentDefault{
		_statusCode: code,
	}
}

/*CreateVolumeBackupPolicyAssignmentDefault handles this case with default header values.

An error has occurred.
*/
type CreateVolumeBackupPolicyAssignmentDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the create volume backup policy assignment default response
func (o *CreateVolumeBackupPolicyAssignmentDefault) Code() int {
	return o._statusCode
}

func (o *CreateVolumeBackupPolicyAssignmentDefault) Error() string {
	return fmt.Sprintf("[POST /volumeBackupPolicyAssignments][%d] CreateVolumeBackupPolicyAssignment default  %+v", o._statusCode, o.Payload)
}

func (o *CreateVolumeBackupPolicyAssignmentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
