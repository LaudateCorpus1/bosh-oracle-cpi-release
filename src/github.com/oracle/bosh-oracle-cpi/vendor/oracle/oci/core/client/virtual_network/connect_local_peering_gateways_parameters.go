// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// NewConnectLocalPeeringGatewaysParams creates a new ConnectLocalPeeringGatewaysParams object
// with the default values initialized.
func NewConnectLocalPeeringGatewaysParams() *ConnectLocalPeeringGatewaysParams {
	var ()
	return &ConnectLocalPeeringGatewaysParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewConnectLocalPeeringGatewaysParamsWithTimeout creates a new ConnectLocalPeeringGatewaysParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewConnectLocalPeeringGatewaysParamsWithTimeout(timeout time.Duration) *ConnectLocalPeeringGatewaysParams {
	var ()
	return &ConnectLocalPeeringGatewaysParams{

		timeout: timeout,
	}
}

// NewConnectLocalPeeringGatewaysParamsWithContext creates a new ConnectLocalPeeringGatewaysParams object
// with the default values initialized, and the ability to set a context for a request
func NewConnectLocalPeeringGatewaysParamsWithContext(ctx context.Context) *ConnectLocalPeeringGatewaysParams {
	var ()
	return &ConnectLocalPeeringGatewaysParams{

		Context: ctx,
	}
}

// NewConnectLocalPeeringGatewaysParamsWithHTTPClient creates a new ConnectLocalPeeringGatewaysParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewConnectLocalPeeringGatewaysParamsWithHTTPClient(client *http.Client) *ConnectLocalPeeringGatewaysParams {
	var ()
	return &ConnectLocalPeeringGatewaysParams{
		HTTPClient: client,
	}
}

/*ConnectLocalPeeringGatewaysParams contains all the parameters to send to the API endpoint
for the connect local peering gateways operation typically these are written to a http.Request
*/
type ConnectLocalPeeringGatewaysParams struct {

	/*ConnectLocalPeeringGatewaysDetails
	  Details regarding the local peering gateway to connect.

	*/
	ConnectLocalPeeringGatewaysDetails *models.ConnectLocalPeeringGatewaysDetails
	/*LocalPeeringGatewayID
	  The OCID of the local peering gateway.

	*/
	LocalPeeringGatewayID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) WithTimeout(timeout time.Duration) *ConnectLocalPeeringGatewaysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) WithContext(ctx context.Context) *ConnectLocalPeeringGatewaysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) WithHTTPClient(client *http.Client) *ConnectLocalPeeringGatewaysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectLocalPeeringGatewaysDetails adds the connectLocalPeeringGatewaysDetails to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) WithConnectLocalPeeringGatewaysDetails(connectLocalPeeringGatewaysDetails *models.ConnectLocalPeeringGatewaysDetails) *ConnectLocalPeeringGatewaysParams {
	o.SetConnectLocalPeeringGatewaysDetails(connectLocalPeeringGatewaysDetails)
	return o
}

// SetConnectLocalPeeringGatewaysDetails adds the connectLocalPeeringGatewaysDetails to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) SetConnectLocalPeeringGatewaysDetails(connectLocalPeeringGatewaysDetails *models.ConnectLocalPeeringGatewaysDetails) {
	o.ConnectLocalPeeringGatewaysDetails = connectLocalPeeringGatewaysDetails
}

// WithLocalPeeringGatewayID adds the localPeeringGatewayID to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) WithLocalPeeringGatewayID(localPeeringGatewayID string) *ConnectLocalPeeringGatewaysParams {
	o.SetLocalPeeringGatewayID(localPeeringGatewayID)
	return o
}

// SetLocalPeeringGatewayID adds the localPeeringGatewayId to the connect local peering gateways params
func (o *ConnectLocalPeeringGatewaysParams) SetLocalPeeringGatewayID(localPeeringGatewayID string) {
	o.LocalPeeringGatewayID = localPeeringGatewayID
}

// WriteToRequest writes these params to a swagger request
func (o *ConnectLocalPeeringGatewaysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectLocalPeeringGatewaysDetails != nil {
		if err := r.SetBodyParam(o.ConnectLocalPeeringGatewaysDetails); err != nil {
			return err
		}
	}

	// path param localPeeringGatewayId
	if err := r.SetPathParam("localPeeringGatewayId", o.LocalPeeringGatewayID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
