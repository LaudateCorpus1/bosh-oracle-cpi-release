// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPublicIPByPrivateIPIDDetails Details of the private IP that the public IP is assigned to.
//
// swagger:model GetPublicIpByPrivateIpIdDetails
type GetPublicIPByPrivateIPIDDetails struct {

	// OCID of the private IP.
	//
	// Required: true
	// Max Length: 255
	// Min Length: 1
	PrivateIPID *string `json:"privateIpId"`
}

// Validate validates this get public Ip by private Ip Id details
func (m *GetPublicIPByPrivateIPIDDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrivateIPID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetPublicIPByPrivateIPIDDetails) validatePrivateIPID(formats strfmt.Registry) error {

	if err := validate.Required("privateIpId", "body", m.PrivateIPID); err != nil {
		return err
	}

	if err := validate.MinLength("privateIpId", "body", string(*m.PrivateIPID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("privateIpId", "body", string(*m.PrivateIPID), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetPublicIPByPrivateIPIDDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetPublicIPByPrivateIPIDDetails) UnmarshalBinary(b []byte) error {
	var res GetPublicIPByPrivateIPIDDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
