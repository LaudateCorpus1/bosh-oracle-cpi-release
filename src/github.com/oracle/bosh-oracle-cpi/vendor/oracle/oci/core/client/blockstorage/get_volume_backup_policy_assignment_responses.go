// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// GetVolumeBackupPolicyAssignmentReader is a Reader for the GetVolumeBackupPolicyAssignment structure.
type GetVolumeBackupPolicyAssignmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVolumeBackupPolicyAssignmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetVolumeBackupPolicyAssignmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetVolumeBackupPolicyAssignmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetVolumeBackupPolicyAssignmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetVolumeBackupPolicyAssignmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetVolumeBackupPolicyAssignmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetVolumeBackupPolicyAssignmentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetVolumeBackupPolicyAssignmentOK creates a GetVolumeBackupPolicyAssignmentOK with default headers values
func NewGetVolumeBackupPolicyAssignmentOK() *GetVolumeBackupPolicyAssignmentOK {
	return &GetVolumeBackupPolicyAssignmentOK{}
}

/*GetVolumeBackupPolicyAssignmentOK handles this case with default header values.

The volume backup policy assignment was retrieved.
*/
type GetVolumeBackupPolicyAssignmentOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.VolumeBackupPolicyAssignment
}

func (o *GetVolumeBackupPolicyAssignmentOK) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] getVolumeBackupPolicyAssignmentOK  %+v", 200, o.Payload)
}

func (o *GetVolumeBackupPolicyAssignmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.VolumeBackupPolicyAssignment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyAssignmentBadRequest creates a GetVolumeBackupPolicyAssignmentBadRequest with default headers values
func NewGetVolumeBackupPolicyAssignmentBadRequest() *GetVolumeBackupPolicyAssignmentBadRequest {
	return &GetVolumeBackupPolicyAssignmentBadRequest{}
}

/*GetVolumeBackupPolicyAssignmentBadRequest handles this case with default header values.

Bad Request
*/
type GetVolumeBackupPolicyAssignmentBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyAssignmentBadRequest) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] getVolumeBackupPolicyAssignmentBadRequest  %+v", 400, o.Payload)
}

func (o *GetVolumeBackupPolicyAssignmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyAssignmentUnauthorized creates a GetVolumeBackupPolicyAssignmentUnauthorized with default headers values
func NewGetVolumeBackupPolicyAssignmentUnauthorized() *GetVolumeBackupPolicyAssignmentUnauthorized {
	return &GetVolumeBackupPolicyAssignmentUnauthorized{}
}

/*GetVolumeBackupPolicyAssignmentUnauthorized handles this case with default header values.

Unauthorized
*/
type GetVolumeBackupPolicyAssignmentUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyAssignmentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] getVolumeBackupPolicyAssignmentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetVolumeBackupPolicyAssignmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyAssignmentNotFound creates a GetVolumeBackupPolicyAssignmentNotFound with default headers values
func NewGetVolumeBackupPolicyAssignmentNotFound() *GetVolumeBackupPolicyAssignmentNotFound {
	return &GetVolumeBackupPolicyAssignmentNotFound{}
}

/*GetVolumeBackupPolicyAssignmentNotFound handles this case with default header values.

Not Found
*/
type GetVolumeBackupPolicyAssignmentNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyAssignmentNotFound) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] getVolumeBackupPolicyAssignmentNotFound  %+v", 404, o.Payload)
}

func (o *GetVolumeBackupPolicyAssignmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyAssignmentInternalServerError creates a GetVolumeBackupPolicyAssignmentInternalServerError with default headers values
func NewGetVolumeBackupPolicyAssignmentInternalServerError() *GetVolumeBackupPolicyAssignmentInternalServerError {
	return &GetVolumeBackupPolicyAssignmentInternalServerError{}
}

/*GetVolumeBackupPolicyAssignmentInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetVolumeBackupPolicyAssignmentInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetVolumeBackupPolicyAssignmentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] getVolumeBackupPolicyAssignmentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVolumeBackupPolicyAssignmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVolumeBackupPolicyAssignmentDefault creates a GetVolumeBackupPolicyAssignmentDefault with default headers values
func NewGetVolumeBackupPolicyAssignmentDefault(code int) *GetVolumeBackupPolicyAssignmentDefault {
	return &GetVolumeBackupPolicyAssignmentDefault{
		_statusCode: code,
	}
}

/*GetVolumeBackupPolicyAssignmentDefault handles this case with default header values.

An error has occurred.
*/
type GetVolumeBackupPolicyAssignmentDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the get volume backup policy assignment default response
func (o *GetVolumeBackupPolicyAssignmentDefault) Code() int {
	return o._statusCode
}

func (o *GetVolumeBackupPolicyAssignmentDefault) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicyAssignments/{policyAssignmentId}][%d] GetVolumeBackupPolicyAssignment default  %+v", o._statusCode, o.Payload)
}

func (o *GetVolumeBackupPolicyAssignmentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
