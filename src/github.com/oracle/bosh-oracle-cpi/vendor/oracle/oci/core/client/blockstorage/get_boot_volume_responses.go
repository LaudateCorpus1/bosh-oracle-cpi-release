// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// GetBootVolumeReader is a Reader for the GetBootVolume structure.
type GetBootVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBootVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBootVolumeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetBootVolumeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetBootVolumeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBootVolumeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetBootVolumeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBootVolumeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBootVolumeOK creates a GetBootVolumeOK with default headers values
func NewGetBootVolumeOK() *GetBootVolumeOK {
	return &GetBootVolumeOK{}
}

/*GetBootVolumeOK handles this case with default header values.

The boot volume's information has been retrieved.
*/
type GetBootVolumeOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.BootVolume
}

func (o *GetBootVolumeOK) Error() string {
	return fmt.Sprintf("[GET /bootVolumes/{bootVolumeId}][%d] getBootVolumeOK  %+v", 200, o.Payload)
}

func (o *GetBootVolumeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.BootVolume)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeBadRequest creates a GetBootVolumeBadRequest with default headers values
func NewGetBootVolumeBadRequest() *GetBootVolumeBadRequest {
	return &GetBootVolumeBadRequest{}
}

/*GetBootVolumeBadRequest handles this case with default header values.

Bad Request
*/
type GetBootVolumeBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetBootVolumeBadRequest) Error() string {
	return fmt.Sprintf("[GET /bootVolumes/{bootVolumeId}][%d] getBootVolumeBadRequest  %+v", 400, o.Payload)
}

func (o *GetBootVolumeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeUnauthorized creates a GetBootVolumeUnauthorized with default headers values
func NewGetBootVolumeUnauthorized() *GetBootVolumeUnauthorized {
	return &GetBootVolumeUnauthorized{}
}

/*GetBootVolumeUnauthorized handles this case with default header values.

Unauthorized
*/
type GetBootVolumeUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetBootVolumeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bootVolumes/{bootVolumeId}][%d] getBootVolumeUnauthorized  %+v", 401, o.Payload)
}

func (o *GetBootVolumeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeNotFound creates a GetBootVolumeNotFound with default headers values
func NewGetBootVolumeNotFound() *GetBootVolumeNotFound {
	return &GetBootVolumeNotFound{}
}

/*GetBootVolumeNotFound handles this case with default header values.

Not Found
*/
type GetBootVolumeNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetBootVolumeNotFound) Error() string {
	return fmt.Sprintf("[GET /bootVolumes/{bootVolumeId}][%d] getBootVolumeNotFound  %+v", 404, o.Payload)
}

func (o *GetBootVolumeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeInternalServerError creates a GetBootVolumeInternalServerError with default headers values
func NewGetBootVolumeInternalServerError() *GetBootVolumeInternalServerError {
	return &GetBootVolumeInternalServerError{}
}

/*GetBootVolumeInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetBootVolumeInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetBootVolumeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /bootVolumes/{bootVolumeId}][%d] getBootVolumeInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBootVolumeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootVolumeDefault creates a GetBootVolumeDefault with default headers values
func NewGetBootVolumeDefault(code int) *GetBootVolumeDefault {
	return &GetBootVolumeDefault{
		_statusCode: code,
	}
}

/*GetBootVolumeDefault handles this case with default header values.

An error has occurred.
*/
type GetBootVolumeDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the get boot volume default response
func (o *GetBootVolumeDefault) Code() int {
	return o._statusCode
}

func (o *GetBootVolumeDefault) Error() string {
	return fmt.Sprintf("[GET /bootVolumes/{bootVolumeId}][%d] GetBootVolume default  %+v", o._statusCode, o.Payload)
}

func (o *GetBootVolumeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
