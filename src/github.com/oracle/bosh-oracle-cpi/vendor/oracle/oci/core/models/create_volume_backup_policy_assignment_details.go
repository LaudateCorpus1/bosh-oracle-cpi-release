// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateVolumeBackupPolicyAssignmentDetails create volume backup policy assignment details
// swagger:model CreateVolumeBackupPolicyAssignmentDetails
type CreateVolumeBackupPolicyAssignmentDetails struct {

	// The OCID of the asset (e.g. a volume) to which to assign the policy.
	// Required: true
	// Max Length: 255
	// Min Length: 1
	AssetID *string `json:"assetId"`

	// The OCID of the volume backup policy to assign to an asset.
	// Required: true
	// Max Length: 255
	// Min Length: 1
	PolicyID *string `json:"policyId"`
}

// Validate validates this create volume backup policy assignment details
func (m *CreateVolumeBackupPolicyAssignmentDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssetID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePolicyID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateVolumeBackupPolicyAssignmentDetails) validateAssetID(formats strfmt.Registry) error {

	if err := validate.Required("assetId", "body", m.AssetID); err != nil {
		return err
	}

	if err := validate.MinLength("assetId", "body", string(*m.AssetID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("assetId", "body", string(*m.AssetID), 255); err != nil {
		return err
	}

	return nil
}

func (m *CreateVolumeBackupPolicyAssignmentDetails) validatePolicyID(formats strfmt.Registry) error {

	if err := validate.Required("policyId", "body", m.PolicyID); err != nil {
		return err
	}

	if err := validate.MinLength("policyId", "body", string(*m.PolicyID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("policyId", "body", string(*m.PolicyID), 255); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateVolumeBackupPolicyAssignmentDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateVolumeBackupPolicyAssignmentDetails) UnmarshalBinary(b []byte) error {
	var res CreateVolumeBackupPolicyAssignmentDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
