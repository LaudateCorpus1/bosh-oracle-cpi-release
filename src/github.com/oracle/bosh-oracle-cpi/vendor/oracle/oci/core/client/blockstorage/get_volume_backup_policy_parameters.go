// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetVolumeBackupPolicyParams creates a new GetVolumeBackupPolicyParams object
// with the default values initialized.
func NewGetVolumeBackupPolicyParams() *GetVolumeBackupPolicyParams {
	var ()
	return &GetVolumeBackupPolicyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVolumeBackupPolicyParamsWithTimeout creates a new GetVolumeBackupPolicyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVolumeBackupPolicyParamsWithTimeout(timeout time.Duration) *GetVolumeBackupPolicyParams {
	var ()
	return &GetVolumeBackupPolicyParams{

		timeout: timeout,
	}
}

// NewGetVolumeBackupPolicyParamsWithContext creates a new GetVolumeBackupPolicyParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetVolumeBackupPolicyParamsWithContext(ctx context.Context) *GetVolumeBackupPolicyParams {
	var ()
	return &GetVolumeBackupPolicyParams{

		Context: ctx,
	}
}

// NewGetVolumeBackupPolicyParamsWithHTTPClient creates a new GetVolumeBackupPolicyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVolumeBackupPolicyParamsWithHTTPClient(client *http.Client) *GetVolumeBackupPolicyParams {
	var ()
	return &GetVolumeBackupPolicyParams{
		HTTPClient: client,
	}
}

/*GetVolumeBackupPolicyParams contains all the parameters to send to the API endpoint
for the get volume backup policy operation typically these are written to a http.Request
*/
type GetVolumeBackupPolicyParams struct {

	/*PolicyID
	  The OCID of the volume backup policy.

	*/
	PolicyID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) WithTimeout(timeout time.Duration) *GetVolumeBackupPolicyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) WithContext(ctx context.Context) *GetVolumeBackupPolicyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) WithHTTPClient(client *http.Client) *GetVolumeBackupPolicyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPolicyID adds the policyID to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) WithPolicyID(policyID string) *GetVolumeBackupPolicyParams {
	o.SetPolicyID(policyID)
	return o
}

// SetPolicyID adds the policyId to the get volume backup policy params
func (o *GetVolumeBackupPolicyParams) SetPolicyID(policyID string) {
	o.PolicyID = policyID
}

// WriteToRequest writes these params to a swagger request
func (o *GetVolumeBackupPolicyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param policyId
	if err := r.SetPathParam("policyId", o.PolicyID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
