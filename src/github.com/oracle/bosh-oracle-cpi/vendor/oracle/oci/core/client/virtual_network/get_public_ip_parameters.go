// Code generated by go-swagger; DO NOT EDIT.

package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPublicIPParams creates a new GetPublicIPParams object
// with the default values initialized.
func NewGetPublicIPParams() *GetPublicIPParams {
	var ()
	return &GetPublicIPParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPublicIPParamsWithTimeout creates a new GetPublicIPParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPublicIPParamsWithTimeout(timeout time.Duration) *GetPublicIPParams {
	var ()
	return &GetPublicIPParams{

		timeout: timeout,
	}
}

// NewGetPublicIPParamsWithContext creates a new GetPublicIPParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPublicIPParamsWithContext(ctx context.Context) *GetPublicIPParams {
	var ()
	return &GetPublicIPParams{

		Context: ctx,
	}
}

// NewGetPublicIPParamsWithHTTPClient creates a new GetPublicIPParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPublicIPParamsWithHTTPClient(client *http.Client) *GetPublicIPParams {
	var ()
	return &GetPublicIPParams{
		HTTPClient: client,
	}
}

/*GetPublicIPParams contains all the parameters to send to the API endpoint
for the get public Ip operation typically these are written to a http.Request
*/
type GetPublicIPParams struct {

	/*PublicIPID
	  The OCID of the public IP.

	*/
	PublicIPID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get public Ip params
func (o *GetPublicIPParams) WithTimeout(timeout time.Duration) *GetPublicIPParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get public Ip params
func (o *GetPublicIPParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get public Ip params
func (o *GetPublicIPParams) WithContext(ctx context.Context) *GetPublicIPParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get public Ip params
func (o *GetPublicIPParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get public Ip params
func (o *GetPublicIPParams) WithHTTPClient(client *http.Client) *GetPublicIPParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get public Ip params
func (o *GetPublicIPParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPublicIPID adds the publicIPID to the get public Ip params
func (o *GetPublicIPParams) WithPublicIPID(publicIPID string) *GetPublicIPParams {
	o.SetPublicIPID(publicIPID)
	return o
}

// SetPublicIPID adds the publicIpId to the get public Ip params
func (o *GetPublicIPParams) SetPublicIPID(publicIPID string) {
	o.PublicIPID = publicIPID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPublicIPParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param publicIpId
	if err := r.SetPathParam("publicIpId", o.PublicIPID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
