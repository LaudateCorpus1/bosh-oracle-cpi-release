// Code generated by go-swagger; DO NOT EDIT.

package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "oracle/oci/core/models"
)

// ListVolumeBackupPoliciesReader is a Reader for the ListVolumeBackupPolicies structure.
type ListVolumeBackupPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVolumeBackupPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVolumeBackupPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListVolumeBackupPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListVolumeBackupPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVolumeBackupPoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVolumeBackupPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVolumeBackupPoliciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVolumeBackupPoliciesOK creates a ListVolumeBackupPoliciesOK with default headers values
func NewListVolumeBackupPoliciesOK() *ListVolumeBackupPoliciesOK {
	return &ListVolumeBackupPoliciesOK{}
}

/*ListVolumeBackupPoliciesOK handles this case with default header values.

The list is being retrieved.
*/
type ListVolumeBackupPoliciesOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.VolumeBackupPolicy
}

func (o *ListVolumeBackupPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies][%d] listVolumeBackupPoliciesOK  %+v", 200, o.Payload)
}

func (o *ListVolumeBackupPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupPoliciesBadRequest creates a ListVolumeBackupPoliciesBadRequest with default headers values
func NewListVolumeBackupPoliciesBadRequest() *ListVolumeBackupPoliciesBadRequest {
	return &ListVolumeBackupPoliciesBadRequest{}
}

/*ListVolumeBackupPoliciesBadRequest handles this case with default header values.

Bad Request
*/
type ListVolumeBackupPoliciesBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies][%d] listVolumeBackupPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *ListVolumeBackupPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupPoliciesUnauthorized creates a ListVolumeBackupPoliciesUnauthorized with default headers values
func NewListVolumeBackupPoliciesUnauthorized() *ListVolumeBackupPoliciesUnauthorized {
	return &ListVolumeBackupPoliciesUnauthorized{}
}

/*ListVolumeBackupPoliciesUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVolumeBackupPoliciesUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies][%d] listVolumeBackupPoliciesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVolumeBackupPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupPoliciesNotFound creates a ListVolumeBackupPoliciesNotFound with default headers values
func NewListVolumeBackupPoliciesNotFound() *ListVolumeBackupPoliciesNotFound {
	return &ListVolumeBackupPoliciesNotFound{}
}

/*ListVolumeBackupPoliciesNotFound handles this case with default header values.

Not Found
*/
type ListVolumeBackupPoliciesNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupPoliciesNotFound) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies][%d] listVolumeBackupPoliciesNotFound  %+v", 404, o.Payload)
}

func (o *ListVolumeBackupPoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupPoliciesInternalServerError creates a ListVolumeBackupPoliciesInternalServerError with default headers values
func NewListVolumeBackupPoliciesInternalServerError() *ListVolumeBackupPoliciesInternalServerError {
	return &ListVolumeBackupPoliciesInternalServerError{}
}

/*ListVolumeBackupPoliciesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVolumeBackupPoliciesInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies][%d] listVolumeBackupPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVolumeBackupPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupPoliciesDefault creates a ListVolumeBackupPoliciesDefault with default headers values
func NewListVolumeBackupPoliciesDefault(code int) *ListVolumeBackupPoliciesDefault {
	return &ListVolumeBackupPoliciesDefault{
		_statusCode: code,
	}
}

/*ListVolumeBackupPoliciesDefault handles this case with default header values.

An error has occurred.
*/
type ListVolumeBackupPoliciesDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list volume backup policies default response
func (o *ListVolumeBackupPoliciesDefault) Code() int {
	return o._statusCode
}

func (o *ListVolumeBackupPoliciesDefault) Error() string {
	return fmt.Sprintf("[GET /volumeBackupPolicies][%d] ListVolumeBackupPolicies default  %+v", o._statusCode, o.Payload)
}

func (o *ListVolumeBackupPoliciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
